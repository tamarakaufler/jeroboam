Requirements: Linux/MySQL/Perl (5.14 minimum)
--------------------------------------------

1)
DATABASE
========
database SQL : in sql directory: files user.sql and schema sql will create the mysql user with access to the voting_poll database, the database and its tables with dummy data 

2)
TESTING THE APPLICATION
=======================
The application is written in Perl, on top of the Catalyst web framework. There will be requirements for extra modules:

Catalyst
File::Cache
DBIx::Class
Template::Toolkit
JSON

1) Set up MySQL database by running:
    mysql -u root -p < user.sql
    mysql -u root -p < schema.sql

2) To test the application, run the development server:
	script/votingpoll_server.pl -p 3010

3) Then in the browser:
	http://localhost:3010/voting/poll

To repeat the voting, rerun:
	http://localhost:3010/voting/poll

Styling:
-------
The layout is very basic. The concentration is on server side implementation of various features.

Results presentation:
--------------------
Google visualization tools 


3)
Further TODO
============ 

Data:
-----
Get real political map data

Scope for functionality improvement:
-----------------------------------
Voting results from different perspectives: 	
				provide percentages
				show results by counties
				show yes/no/undecided votes: 	globally
								by county
								by constituency
				add higher geographical level (England, Wales etc)

Implementation:
--------------
The information about yes/no/undecided votes is stored in an InnoDB table. Another possibility could be a NoSQL approach.

Database:
Check usage of indexes according to used SQL queries.

Perl code:
Add missing sorting
Add comments and documentation

